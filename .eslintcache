[{"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\index.js":"1","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\App.jsx":"2","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\searchinput\\search-component.jsx":"3","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\cards-grid\\cards-grid-component.jsx":"4","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\cards\\cards-component.jsx":"5","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\App.jsx":"6","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\cards\\cards-component.jsx":"7","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\cards-grid\\cards-grid-component.jsx":"8","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\searchinput\\search-component.jsx":"9"},{"size":165,"mtime":1606285396622,"results":"10","hashOfConfig":"11"},{"size":502,"mtime":1606351159773,"results":"12","hashOfConfig":"11"},{"size":456,"mtime":1606351156107,"results":"13","hashOfConfig":"11"},{"size":562,"mtime":1606352933542,"results":"14","hashOfConfig":"11"},{"size":239,"mtime":1606339769861,"results":"15","hashOfConfig":"11"},{"size":519,"mtime":1606433707576,"results":"16","hashOfConfig":"17"},{"size":277,"mtime":1606432981893,"results":"18","hashOfConfig":"17"},{"size":875,"mtime":1606434788032,"results":"19","hashOfConfig":"17"},{"size":438,"mtime":1606390292136,"results":"20","hashOfConfig":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v1mrie",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15c6iaz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\index.js",[],"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\App.jsx",["41"],"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\searchinput\\search-component.jsx",[],"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\cards-grid\\cards-grid-component.jsx",["42","43","44"],"import React, { Component, useEffect } from 'react'\r\nimport {Card} from '../cards/cards-component'\r\n\r\nconst Cardgrid = ()=>{\r\n    const [cardState, setCardState] = React.useState({})\r\n\r\n    React.useEffect(async ()=>{\r\n        const reponse = await fetch('http://jsonplaceholder.typicode.com/users')\r\n        const data = await reponse.json()\r\n        setCardState(data)\r\n    },[])\r\n    return <div className=\"cards-grid\">\r\n    {console.log(cardState)}\r\n        <Card />\r\n        <Card />\r\n        <Card />\r\n        <Card />\r\n    </div>\r\n}\r\n\r\nexport {Cardgrid}\r\n","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\random-profiles\\src\\components\\cards\\cards-component.jsx",[],"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\App.jsx",[],"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\cards\\cards-component.jsx",[],"C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\cards-grid\\cards-grid-component.jsx",["45"],"import React, { useEffect, useState } from 'react'\nimport {Card} from '../cards/cards-component'\n\n\nconst Cardgrid = (props)=>{\n    const [cardState, setCardState] = useState()\n\n    \n\n    useEffect(()=>{\n        const getData = async ()=>{\n            \n            const reponse = await fetch('http://jsonplaceholder.typicode.com/users')\n            const data = await reponse.json()\n            setCardState(data)\n            // \n    }\n    getData()\n        \n}, [])\n\n    return <div className=\"cards-grid\">\n    {cardState && cardState.map((item)=>{\n        if(item.name.toLowerCase().includes(props.searched.toLowerCase())){\n            return (\n                <Card\n        key={item.id}\n        src={`https://robohash.org/${item.id}`}\n        email={item.email}\n        name={item.name}\n        \n         />\n            )\n        }\n    })}\n    </div>\n}\n\nexport {Cardgrid}\n","C:\\Users\\OLOLADE\\Documents\\programming\\projects\\Random-profiles\\src\\components\\searchinput\\search-component.jsx",[],{"ruleId":"46","severity":1,"message":"47","line":6,"column":10,"nodeType":"48","messageId":"49","endLine":6,"endColumn":20},{"ruleId":"46","severity":1,"message":"50","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"51","line":1,"column":28,"nodeType":"48","messageId":"49","endLine":1,"endColumn":37},{"ruleId":"52","severity":1,"message":"53","line":7,"column":21,"nodeType":"54","endLine":11,"endColumn":6},{"ruleId":"55","severity":1,"message":"56","line":23,"column":39,"nodeType":"54","messageId":"57","endLine":23,"endColumn":41},"no-unused-vars","'inputState' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd"]